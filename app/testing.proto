syntax = "proto3";

package iaas.fapra.testing;

import "google/protobuf/any.proto";
import "external.proto";

message Empty {
}

message Simple {
  string text = 1;
}

message Complex {
  Simple first = 1;
  Simple second = 2;
}

// message Anything {
//  google.protobuf.Any thing = 1;
// }

message Status {
  enum Some {
    A = 0;
    B = 1;
    C = 2;
    D = 3;
  }
  Some value = 1 [default = A];
}

message Info {
  oneof content {
    string text = 1;
    Simple object = 2;
  }
}

message Array {
  repeated string items = 1;
}

message SimpleMap {
  map<string, Simple> items = 1;
}

message AllScalarValues {
  double doubleValue = 1;
  float floatValue = 2;
  int32 int32Value = 3;
  int64 int64Value = 4;
  uint32 uint32Value = 5;
  uint64 uint64Value = 6;
  sint32 sint32Value = 7;
  sint64 sint64Value = 8;
  fixed32 fixed32Value = 9;
  fixed64 fixed64Value = 10;
  sfixed32 sfixed32Value = 11;
  sfixed64 sfixed64Value = 12;
  bool boolValue = 13;
  string stringValue = 14;
  bytes bytesValue = 15;
}

service test {
  rpc emptyResponse(Empty) returns (Empty) {}
  rpc simpleResponse(Empty) returns (Simple) {}
  rpc complexResponse(Empty) returns (Complex) {}
  rpc simpleRequest(Simple) returns (Empty) {}
  rpc complexRequest(Complex) returns (Empty) {}
  rpc simpleRequestComplexResponse(Simple) returns (Complex) {}

  rpc streamingRequest(stream Simple) returns (Simple) {}
  rpc streamingResponse(Empty) returns (stream Simple) {}
  rpc bidirectionalStreaming(stream Simple) returns (stream Simple) {}

  rpc enumRequest(Status) returns (Simple) {}
  rpc enumResponse(Empty) returns (Status) {}

  // commenting out because node doesn't seem to understand these messages
  // rpc anyRequest(Anything) returns (Simple) {}
  // rpc anyResponse(Empty) returns (Anything) {}

  rpc oneOfRequest(Info) returns (Simple) {}
  rpc oneOfResponse(Empty) returns (Info) {}

  rpc arrayRequest(Array) returns (Simple) {}
  rpc arrayResponse(Empty) returns (Array) {}

  rpc mapRequest(SimpleMap) returns (Simple) {}
  rpc mapResponse(Empty) returns (SimpleMap) {}

  rpc scalarValuesRequest(AllScalarValues) returns (Simple) {}
  rpc scalarValuesResponse(Empty) returns (AllScalarValues) {}

  rpc importedRequest(External) returns (Simple) {}
  rpc importedResponse(Empty) returns (External) {}
  rpc absolutelyReferencedRequest(iaas.fapra.Simple) returns (Simple) {}
  rpc absolutelyReferencedResponse(Empty) returns (iaas.fapra.Simple) {}
  rpc dotPrefixedReferencedRequest(.iaas.fapra.Simple) returns (Simple) {}
  rpc dotPrefixedReferencedResponse(Empty) returns (.iaas.fapra.Simple) {}
}
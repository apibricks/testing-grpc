syntax = "proto3";

package testing;

message Empty {
}

message Simple {
  string text = 1;
}

message Complex {
  Simple first = 1;
  Simple second = 2;
}

message Anything {
  Any thing = 1;
}

message Status {
  enum Some {
    A = 0;
    B = 1;
    C = 2;
    D = 3;
  }
  Some value = 1 [default = A];
}

message Info {
  oneof content {
    string text = 1;
    Simple object = 2;
  }
}

message Array {
  repeated string items = 1;
}

message SimpleMap {
  map<string, Simple> items = 1;
}

service test {
  rpc emptyResponse(Empty) returns (Empty) {}
  rpc simpleResponse(Empty) returns (Simple) {}
  rpc complexResponse(Empty) returns (Complex) {}
  rpc simpleRequest(Simple) returns (Empty) {}
  rpc complexRequest(Complex) returns (Empty) {}
  rpc simpleRequestComplexResponse(Simple) returns (Complex) {}

  rpc streamingRequest(stream Simple) returns (Simple) {}
  rpc streamingResponse(Empty) returns (stream Simple) {}
  rpc bidirectionalStreaming(stream Simple) returns (stream Simple) {}

  rpc enumRequest(Status) returns (Simple) {}
  rpc enumResponse(Empty) returns (Status) {}

  rpc anyRequest(Anything) returns (Simple) {}
  rpc anyResponse(Empty) returns (Any) {}

  rpc oneOfRequest(Info) returns (Simple) {}
  rpc oneOfResponse(Empty) returns (Info) {}

  rpc arrayRequest(Array) returns (Simple) {}
  rpc arrayResponse(Empty) returns (Array) {}

  rpc mapRequest(SimpleMap) returns (Simple) {}
  rpc mapResponse(Empty) returns (SimpleMap) {}
}